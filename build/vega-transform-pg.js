var t=require("vega"),r=require("querystring"),e=require("http");function n(r){t.Transform.call(this,[],r)}n.setHttpOptions=function(t){return t?(this._httpOptions=t,this):this._httpOptions},n.Definition={type:"postgres",metadata:{changes:!0,source:!0},params:[{name:"query",type:"string",required:!0}]},t.inherits(n,t.Transform).transform=function(o,s){try{var i=this;if(console.log(o),!n._httpOptions)throw Error("Vega Transform Postgres http options missing. Assign it with setHttpOptions.");if(!o.query)throw Error("Internal error: this._query should be defined");return Promise.resolve(new Promise(function(t,s){var i=r.stringify({query:o.query});n._httpOptions["Content-Length"]=Buffer.byteLength(i);var u=e.request(n._httpOptions,function(r){var e="";r.on("data",function(t){e+=t}),r.on("end",function(){400===r.statusCode?s(r.statusMessage+": "+e):t(JSON.parse(e))})});u.on("error",function(t){s(t)}),u.write(i),u.end()}).catch(function(t){return console.error(t),[]})).then(function(r){r.forEach(t.ingest);var e=s.fork(s.NO_FIELDS&s.NO_SOURCE);return i.value=e.add=e.source=e.rem=r,e})}catch(t){return Promise.reject(t)}},module.exports=n;
//# sourceMappingURL=vega-transform-pg.js.map
