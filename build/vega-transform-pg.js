var r=require("vega");"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var e=require("querystring");function t(e){r.Transform.call(this,[],e)}require("http"),global.fetch=require("node-fetch"),t.setHttpOptions=function(r){return r?(this._httpOptions=r,this):this._httpOptions},t.Definition={type:"dbtransform",metadata:{changes:!0,source:!0},params:[{name:"query",type:"string",required:!0}]},r.inherits(t,r.Transform).transform=function(o,n){try{var i=this;function s(){a.forEach(r.ingest);var e=n.fork(n.NO_FIELDS&n.NO_SOURCE);return i.value=e.add=e.source=e.rem=a,e}if(!t._httpOptions)throw Error("Vega Transform Postgres http options missing. Assign it with setHttpOptions.");if(!o.query)throw Error("Internal error: this._query should be defined");var a=[],u=function(r,e){try{var t=r()}catch(r){return e(r)}return t&&t.then?t.then(void 0,e):t}(function(){return Promise.resolve(function(){try{var r=t._httpOptions;return Promise.resolve(fetch(r.url,{method:r.method,mode:r.mode,headers:r.headers,body:e.stringify({query:o.query})})).then(function(r){return r.ok?Promise.resolve(r.json()):Promise.resolve(r.json()).then(function(r){throw Error((r.error+": "+r.message).replace(/(\r\n|\n|\r)/gm,""))})})}catch(r){return Promise.reject(r)}}()).then(function(r){a=r})},function(r){console.log(r)});return Promise.resolve(u&&u.then?u.then(s):s())}catch(r){return Promise.reject(r)}},module.exports=t;
//# sourceMappingURL=vega-transform-pg.js.map
