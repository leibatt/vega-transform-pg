!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r(require("vega")):"function"==typeof define&&define.amd?define(["vega"],r):e.VegaTransformPostgres=r(e.vega)}(this,function(e){"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var r=require("querystring");function t(r){e.Transform.call(this,[],r)}return require("http"),t.setHttpOptions=function(e){return e?(this._httpOptions=e,this):this._httpOptions},t.Definition={type:"dbtransform",metadata:{changes:!0,source:!0},params:[{name:"query",type:"string",required:!0}]},e.inherits(t,e.Transform).transform=function(o,n){try{var i=this;function s(){a.forEach(e.ingest);var r=n.fork(n.NO_FIELDS&n.NO_SOURCE);return i.value=r.add=r.source=r.rem=a,r}if(!t._httpOptions)throw Error("Vega Transform Postgres http options missing. Assign it with setHttpOptions.");if(!o.query)throw Error("Internal error: this._query should be defined");var a=[],u=function(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}(function(){return Promise.resolve(function(){try{var e=t._httpOptions;return Promise.resolve(fetch(e.url,{method:e.method,mode:e.mode,headers:e.headers,body:r.stringify({query:o.query})})).then(function(e){return e.ok?Promise.resolve(e.json()):Promise.resolve(e.json()).then(function(e){throw Error((e.error+": "+e.message).replace(/(\r\n|\n|\r)/gm,""))})})}catch(e){return Promise.reject(e)}}()).then(function(e){a=e})},function(e){console.log(e)});return Promise.resolve(u&&u.then?u.then(s):s())}catch(e){return Promise.reject(e)}},t});
//# sourceMappingURL=vega-transform-db.umd.js.map
